import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# 🍎 예제 데이터: 키(cm)와 신발 사이즈(mm)
data_list = [
    [160, 235],
    [165, 240],
    [170, 250],
    [175, 255],
    [180, 260],
    [185, 270],
    [190, 280]
]

# 1. 🐼 데이터 준비: Pandas DataFrame 생성
df = pd.DataFrame(data_list, columns=['키(cm)', '신발 사이즈(mm)'])

# 키(독립 변수, X)와 신발 사이즈(종속 변수, Y) 분리
# Scikit-learn 입력에 맞게 X는 DataFrame, Y는 Series 형태로 추출
# 🔑 핵심: X는 DataFrame. Y는 Series(1차원) 형태로 유지
X_df = df[['키(cm)']]       # 2차원 DataFrame (키)
Y_series = df['신발 사이즈(mm)'] # 1차원 Series (신발 사이즈)

# 2. 🧠 모델 학습: LinearRegression 모델 생성 및 학습
model = LinearRegression()
# X_df (DataFrame)와 Y_series (Series)를 그대로 전달하여 학습
model.fit(X_df, Y_series)

# 3. 📉 예측: 학습된 모델을 이용해 X 값에 대한 예측 Y 값 생성
Y_pred = model.predict(X_df)

# 4. 📊 결과 시각화
plt.figure(figsize=(8, 6))

# 실제 데이터 (산점도) - X축에 df['키(cm)'], Y축에 Y_series 사용
# 4. 📊 Visualization of Results
plt.figure(figsize=(8, 6))

# Actual Data (Scatter Plot)
plt.scatter(df['키(cm)'], Y_series, color='blue', label='Actual Data (Height vs. Shoe Size)', marker='o')

# Linear Regression Line generated by the model - using df['키(cm)'] for X-axis and predicted values Y_pred for Y-axis
plt.plot(df['키(cm)'], Y_pred, color='red', label='Linear Regression Line', linewidth=2)

# Set graph title and axis labels
plt.title('Linear Regression Analysis of Shoe Size by Height (Pandas)')
plt.xlabel('Height (cm)')
plt.ylabel('Shoe Size (mm)')
plt.legend()
plt.grid(True, linestyle='--', alpha=0.6)
plt.show()

# 🔍 Model Results Check
print(f"\nSlope (Coefficient): {model.coef_[0]:.4f}")
print(f"Intercept: {model.intercept_:.4f}")
print(f"Regression Equation: Shoe Size (Y) = {model.coef_[0]:.4f} * Height (X) + {model.intercept_:.4f}")